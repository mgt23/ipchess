// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/ipchess.proto

package ipchessproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId   []byte `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	White     []byte `protobuf:"bytes,2,opt,name=white,proto3" json:"white,omitempty"`
	Black     []byte `protobuf:"bytes,3,opt,name=black,proto3" json:"black,omitempty"`
	Enc       uint32 `protobuf:"varint,4,opt,name=enc,proto3" json:"enc,omitempty"`
	Seq       uint32 `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	Signature []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ipchess_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipchess_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_proto_ipchess_proto_rawDescGZIP(), []int{0}
}

func (x *Move) GetMatchId() []byte {
	if x != nil {
		return x.MatchId
	}
	return nil
}

func (x *Move) GetWhite() []byte {
	if x != nil {
		return x.White
	}
	return nil
}

func (x *Move) GetBlack() []byte {
	if x != nil {
		return x.Black
	}
	return nil
}

func (x *Move) GetEnc() uint32 {
	if x != nil {
		return x.Enc
	}
	return 0
}

func (x *Move) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Move) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ChallengeAsk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment []byte `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
}

func (x *ChallengeAsk) Reset() {
	*x = ChallengeAsk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ipchess_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeAsk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeAsk) ProtoMessage() {}

func (x *ChallengeAsk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipchess_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeAsk.ProtoReflect.Descriptor instead.
func (*ChallengeAsk) Descriptor() ([]byte, []int) {
	return file_proto_ipchess_proto_rawDescGZIP(), []int{1}
}

func (x *ChallengeAsk) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type ChallengeAskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandomBytes []byte `protobuf:"bytes,1,opt,name=random_bytes,json=randomBytes,proto3" json:"random_bytes,omitempty"`
}

func (x *ChallengeAskResponse) Reset() {
	*x = ChallengeAskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ipchess_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeAskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeAskResponse) ProtoMessage() {}

func (x *ChallengeAskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipchess_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeAskResponse.ProtoReflect.Descriptor instead.
func (*ChallengeAskResponse) Descriptor() ([]byte, []int) {
	return file_proto_ipchess_proto_rawDescGZIP(), []int{2}
}

func (x *ChallengeAskResponse) GetRandomBytes() []byte {
	if x != nil {
		return x.RandomBytes
	}
	return nil
}

type ChallengeCommitmentPreimage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preimage []byte `protobuf:"bytes,1,opt,name=preimage,proto3" json:"preimage,omitempty"`
}

func (x *ChallengeCommitmentPreimage) Reset() {
	*x = ChallengeCommitmentPreimage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ipchess_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeCommitmentPreimage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeCommitmentPreimage) ProtoMessage() {}

func (x *ChallengeCommitmentPreimage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipchess_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeCommitmentPreimage.ProtoReflect.Descriptor instead.
func (*ChallengeCommitmentPreimage) Descriptor() ([]byte, []int) {
	return file_proto_ipchess_proto_rawDescGZIP(), []int{3}
}

func (x *ChallengeCommitmentPreimage) GetPreimage() []byte {
	if x != nil {
		return x.Preimage
	}
	return nil
}

var File_proto_ipchess_proto protoreflect.FileDescriptor

var file_proto_ipchess_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x69, 0x70, 0x63, 0x68, 0x65, 0x73, 0x73, 0x22, 0x8f,
	0x01, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x2e, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x41, 0x73, 0x6b,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x39, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x41, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x1b, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x12, 0x5a, 0x10, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x70,
	0x63, 0x68, 0x65, 0x73, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_ipchess_proto_rawDescOnce sync.Once
	file_proto_ipchess_proto_rawDescData = file_proto_ipchess_proto_rawDesc
)

func file_proto_ipchess_proto_rawDescGZIP() []byte {
	file_proto_ipchess_proto_rawDescOnce.Do(func() {
		file_proto_ipchess_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ipchess_proto_rawDescData)
	})
	return file_proto_ipchess_proto_rawDescData
}

var file_proto_ipchess_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_ipchess_proto_goTypes = []interface{}{
	(*Move)(nil),                        // 0: ipchess.Move
	(*ChallengeAsk)(nil),                // 1: ipchess.ChallengeAsk
	(*ChallengeAskResponse)(nil),        // 2: ipchess.ChallengeAskResponse
	(*ChallengeCommitmentPreimage)(nil), // 3: ipchess.ChallengeCommitmentPreimage
}
var file_proto_ipchess_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ipchess_proto_init() }
func file_proto_ipchess_proto_init() {
	if File_proto_ipchess_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ipchess_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ipchess_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeAsk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ipchess_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeAskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ipchess_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeCommitmentPreimage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ipchess_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ipchess_proto_goTypes,
		DependencyIndexes: file_proto_ipchess_proto_depIdxs,
		MessageInfos:      file_proto_ipchess_proto_msgTypes,
	}.Build()
	File_proto_ipchess_proto = out.File
	file_proto_ipchess_proto_rawDesc = nil
	file_proto_ipchess_proto_goTypes = nil
	file_proto_ipchess_proto_depIdxs = nil
}
